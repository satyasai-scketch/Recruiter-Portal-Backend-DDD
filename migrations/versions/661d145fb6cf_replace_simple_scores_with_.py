"""replace_simple_scores_with_comprehensive_scoring_model

Revision ID: 661d145fb6cf
Revises: e54a12b7b2ff
Create Date: 2025-10-15 16:41:31.815791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '661d145fb6cf'
down_revision: Union[str, None] = 'e54a12b7b2ff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidate_scores',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('candidate_id', sa.String(), nullable=False),
    sa.Column('persona_id', sa.String(), nullable=False),
    sa.Column('cv_id', sa.String(), nullable=False),
    sa.Column('pipeline_stage_reached', sa.Integer(), nullable=False),
    sa.Column('final_score', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('final_decision', sa.String(), nullable=False),
    sa.Column('embedding_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('lightweight_llm_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('detailed_llm_score', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('scored_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('scoring_version', sa.String(), nullable=True),
    sa.Column('processing_time_ms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['candidate_cvs.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_candidate_persona', 'candidate_scores', ['candidate_id', 'persona_id'], unique=False)
    op.create_index('idx_cv_persona', 'candidate_scores', ['cv_id', 'persona_id'], unique=False)
    op.create_index('idx_scored_at', 'candidate_scores', ['scored_at'], unique=False)
    op.create_index(op.f('ix_candidate_scores_candidate_id'), 'candidate_scores', ['candidate_id'], unique=False)
    op.create_index(op.f('ix_candidate_scores_cv_id'), 'candidate_scores', ['cv_id'], unique=False)
    op.create_index(op.f('ix_candidate_scores_persona_id'), 'candidate_scores', ['persona_id'], unique=False)
    op.create_table('score_categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('candidate_score_id', sa.String(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=False),
    sa.Column('weight_percentage', sa.Integer(), nullable=False),
    sa.Column('category_score_percentage', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('category_contribution', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['candidate_score_id'], ['candidate_scores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_candidate_score_category', 'score_categories', ['candidate_score_id', 'category_name'], unique=False)
    op.create_index(op.f('ix_score_categories_candidate_score_id'), 'score_categories', ['candidate_score_id'], unique=False)
    op.create_table('score_insights',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('candidate_score_id', sa.String(), nullable=False),
    sa.Column('insight_type', sa.String(), nullable=False),
    sa.Column('insight_text', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_score_id'], ['candidate_scores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_candidate_score_type', 'score_insights', ['candidate_score_id', 'insight_type'], unique=False)
    op.create_index(op.f('ix_score_insights_candidate_score_id'), 'score_insights', ['candidate_score_id'], unique=False)
    op.create_table('score_stages',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('candidate_score_id', sa.String(), nullable=False),
    sa.Column('stage_number', sa.Integer(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('score', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('threshold', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('min_threshold', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('decision', sa.String(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('next_stage', sa.String(), nullable=True),
    sa.Column('relevance_score', sa.Integer(), nullable=True),
    sa.Column('quick_assessment', sa.Text(), nullable=True),
    sa.Column('skills_detected', sqlite.JSON(), nullable=True),
    sa.Column('roles_detected', sqlite.JSON(), nullable=True),
    sa.Column('key_matches', sqlite.JSON(), nullable=True),
    sa.Column('key_gaps', sqlite.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_score_id'], ['candidate_scores.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_candidate_score_stage', 'score_stages', ['candidate_score_id', 'stage_number'], unique=False)
    op.create_index(op.f('ix_score_stages_candidate_score_id'), 'score_stages', ['candidate_score_id'], unique=False)
    op.create_table('score_subcategories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('category_id', sa.String(), nullable=False),
    sa.Column('subcategory_name', sa.String(), nullable=False),
    sa.Column('weight_percentage', sa.Integer(), nullable=False),
    sa.Column('expected_level', sa.Integer(), nullable=False),
    sa.Column('actual_level', sa.Integer(), nullable=False),
    sa.Column('base_score', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('missing_count', sa.Integer(), nullable=False),
    sa.Column('scored_percentage', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['score_categories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_category_subcategory', 'score_subcategories', ['category_id', 'subcategory_name'], unique=False)
    op.create_index(op.f('ix_score_subcategories_category_id'), 'score_subcategories', ['category_id'], unique=False)
    op.drop_index('ix_scores_candidate_id', table_name='scores')
    op.drop_index('ix_scores_persona_id', table_name='scores')
    op.drop_table('scores')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('scores',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('candidate_id', sa.VARCHAR(), nullable=False),
    sa.Column('persona_id', sa.VARCHAR(), nullable=False),
    sa.Column('category', sa.VARCHAR(), nullable=False),
    sa.Column('score', sa.FLOAT(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_scores_persona_id', 'scores', ['persona_id'], unique=False)
    op.create_index('ix_scores_candidate_id', 'scores', ['candidate_id'], unique=False)
    op.drop_index(op.f('ix_score_subcategories_category_id'), table_name='score_subcategories')
    op.drop_index('idx_category_subcategory', table_name='score_subcategories')
    op.drop_table('score_subcategories')
    op.drop_index(op.f('ix_score_stages_candidate_score_id'), table_name='score_stages')
    op.drop_index('idx_candidate_score_stage', table_name='score_stages')
    op.drop_table('score_stages')
    op.drop_index(op.f('ix_score_insights_candidate_score_id'), table_name='score_insights')
    op.drop_index('idx_candidate_score_type', table_name='score_insights')
    op.drop_table('score_insights')
    op.drop_index(op.f('ix_score_categories_candidate_score_id'), table_name='score_categories')
    op.drop_index('idx_candidate_score_category', table_name='score_categories')
    op.drop_table('score_categories')
    op.drop_index(op.f('ix_candidate_scores_persona_id'), table_name='candidate_scores')
    op.drop_index(op.f('ix_candidate_scores_cv_id'), table_name='candidate_scores')
    op.drop_index(op.f('ix_candidate_scores_candidate_id'), table_name='candidate_scores')
    op.drop_index('idx_scored_at', table_name='candidate_scores')
    op.drop_index('idx_cv_persona', table_name='candidate_scores')
    op.drop_index('idx_candidate_persona', table_name='candidate_scores')
    op.drop_table('candidate_scores')
    # ### end Alembic commands ###
